name: .NET Core

env:
  PRERELEASE_BRANCHES: experimental,alpha,beta,rc # Comma separated list of prerelease branch names. 'alpha,rc, ...'
  COVERAGE_FOLDER: Coverage
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  push:
    branches:
      - '**'
  pull_request:
    types: [ closed ]

jobs:
  ci:
    name: Integration
    runs-on: ubuntu-latest
    outputs:
      should-publish: ${{ steps.context.outputs.should-publish }}
      current-version: ${{ steps.context.outputs.current-version }}
      release-type: ${{ steps.context.outputs.release-type }}
      cascading-release: ${{ steps.context.outputs.cascading-release }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive 
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'
    - name: Install dependencies
      run: dotnet restore --no-cache --verbosity normal
    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: Test and report coverage
      run: dotnet test --configuration Release --no-build /p:CollectCoverage=true /p:CoverletOutput=${{ github.workspace }}/${{ env.COVERAGE_FOLDER }}/ /p:MergeWith=${{ github.workspace }}/${{ env.COVERAGE_FOLDER }}/coverage/ /p:CoverletOutputFormat=opencover

    - name: SonarScanner for .NET Core with pull request decoration support
      uses: highbyte/sonarscan-dotnet@2.0
      with:
        sonarProjectKey: RaaLabs_TimeSeries.Terasaki
        sonarProjectName:  TimeSeries.Terasaki
        sonarOrganization: raalabs
        dotnetTestArguments: --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
        sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"        